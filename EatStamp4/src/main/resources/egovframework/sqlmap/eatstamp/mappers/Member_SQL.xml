<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.EatStamp.mapper.MemberMapper">

	<!-- 0322 최은지 로그인용 최초생성-->
		<select id="login_check" resultType="memberVO"  parameterType="memberVO">
				SELECT 
					mem_num,
					mem_email, 
					mem_pw,
					mem_nick,
					mem_birth,
					mem_genderCode,
					mem_branchCode,
					mem_profileCode
				 FROM 
				 	eatstamp.member 
				 WHERE 
					 mem_email = #{mem_email}
				<!--  AND 
				 	mem_pw = #{mem_pw} -->
				 	<!-- 암호화 때문에 비밀번호 컬럼 조회 X  -->
		</select>
		
		
		<!-- 0327 최은지 이메일 인증용 최초생성 -->
		<!-- 이메일 인증용 랜덤번호 저장 -->
		<update id="update_mail_key" parameterType="memberVO">
   			 UPDATE 
   			 	member 
   			 SET 
   			 	mem_mail_key=#{mem_mail_key}
   			  WHERE
   			  	mem_email=#{mem_email}
		</update>
		
		
		<!-- 0327 최은지 이메일 인증용 최초생성 -->
		<!-- 이메일 인증용 컬럼값 변경 -->
		<update id="update_mail_auth" parameterType="memberVO">
    		UPDATE 
    			member 
    		SET
    			 mem_mail_auth=1 
    		WHERE 
    			mem_email=#{mem_email} 
    		AND 
    			mem_mail_key=#{mem_mail_key}
		</update>
		
		
		<!-- 0327 최은지 이메일 인증용 최초생성 -->
		<!-- 로그인 시 이메일 인증여부 확인 -->
		<select id="email_auth_fail" parameterType="String" resultType="int">
		
   			 SELECT
				count(*) 
			FROM 
				member
			WHERE
				  mem_email=#{mem_email} 
			AND 
				mem_mail_auth=1
				
		</select>
		
		
		<!-- 0327 최은지 회원가입용 -->
		 <!-- member테이블에 insert하기 -->
	    <insert id="insertMember" parameterType="memberVO">
	        
	        INSERT 
			INTO 
				member
					(mem_email,
					 mem_pw,
					 mem_birth, 
					 mem_nick,
					 mem_genderCode, 
					 mem_profileCode, 
					 mem_branchCode, 
					 mem_mail_key,
					 mem_mail_auth)
			VALUES
				(
					#{mem_email}, 
					#{mem_pw}, 
					#{mem_birth},
					#{mem_nick},
					 #{mem_genderCode}, 
					 #{mem_profileCode}, 
					 'C',
					 '0',
					 0
				)
					  
	    </insert>
	    
	    		
		<!-- 0329 최은지 카카오 회원 조회용 -->
		 <!-- member테이블에서 카카오 회원 정보 찾기-->
		 <select id="find_kakao" parameterType="hashMap" resultType="memberVO">
		 		SELECT
					 mem_email, 
					 mem_nick
				 FROM 
				 	eatstamp.member 
				 WHERE
				 	mem_email = #{email}
				 AND
				 	mem_nick = #{nickname}
		 </select>
	    
	    
		<!-- 0329 최은지 카카오 회원 등록용 -->
		 <!-- member테이블에 카카오 회원 정보 등록하기-->
		 <insert id="kakao_insert" parameterType="hashMap">
		 	 INSERT 
			 INTO 
				member
					(mem_email,
					 mem_pw,
					 mem_birth, 
					 mem_nick,
					 mem_genderCode, 
					 mem_profileCode, 
					 mem_branchCode, 
					 mem_mail_key,
					 mem_mail_auth)
			 VALUES
				(
					#{email}, 
					"kakaoPw", 
					null,
					#{nickname},
					 "", 
					"", 
					 'K',
					 '0',
					 1
				)	 
		 </insert>
		
		
		<!-- 0330 최은지 -->
		 <!-- 이메일 실시간 중복 여부 확인-->
		<select id="emailDuplCheck" parameterType="String"  resultType="int">
				SELECT 
				COUNT(*) 
				FROM 
					member
				WHERE
					 mem_email= #{mem_email}
		</select>
		
		
		<!-- 0403 최은지  -->
		<!-- 카카오 회원 일반 로그인 시도 여부 조회  -->
		<select id="login_kakaoCheck" parameterType="String"  resultType="int">
			 SELECT 
			 	COUNT(*) 
			 FROM
			 	member
			 WHERE
			 	 mem_email= #{mem_email}
			 AND
			 	 mem_branchCode = "k"
		</select>
		
		
		<!-- 0403 최은지  -->
		<!-- 비밀번호 찾기 시 이메일 존재 여부 조회 -->
		<select id="find_pwEmail" parameterType="String"  resultType="int">
			 SELECT 
			 	COUNT(*) 
			 FROM
			 	member
			 WHERE
			 	 mem_email= #{mem_email}		
		</select>
		
		
		<!-- 0403 최은지  -->
		<!-- 비밀번호 찾기 시 컬럼 값 난수 업데이트 -->
		<update id="update_pwd_find_mail_key" parameterType="memberVO">
			UPDATE 
   			 	member 
   			 SET 
   			 	mem_auth_pwEmail=#{mem_auth_pwEmail}
   			  WHERE
   			  	mem_email=#{mem_email}
		</update>
		
		
		<!-- 0403 최은지  -->
		<!-- 비밀번호 찾기 시 인증번호 비교 -->
		<select id="comparison_code" parameterType="String" resultType="String">
			 SELECT 
				 	mem_auth_pwEmail 
				 FROM
				 	member
				 WHERE
				 	mem_email=#{mem_email}
		</select>
		
		
		<!-- 0404 최은지  -->
		<!-- 비밀번호 재설정 -->
		<update id="reset_pw" parameterType="memberVO">
			UPDATE
				member
			SET
				mem_pw = #{mem_pw}
			WHERE
				mem_email=#{mem_email}
		</update>
		
				
		<!-- 0410 최은지  -->
		<!-- 회원 탈퇴 -->
		<delete id="delete_member" parameterType="memberVO">
		
		DELETE
			 FROM 
			 	member
			 
		WHERE
			 mem_num= #{mem_num}
		
		</delete>
		
		
		<!-- 0410 최은지  -->
		<!-- 회원 탈퇴용 비밀번호 받아오기 -->
		<select id="delete_member_check" parameterType="memberVO"  resultType="memberVO">
		
		SELECT
			mem_num,
			mem_email,
			mem_pw
			
			 FROM 
			 	member
			 
		WHERE
			 mem_num= #{mem_num}
		
		</select>
		
		<!-- 0412 이예지 -->
		<!-- 회원 정보 조회 -->
		<select id="selectMember" parameterType="int" resultType="memberVO">
   			SELECT
				*
			FROM 
				member
			WHERE
				  mem_num=#{mem_num} 
		</select>

</mapper>